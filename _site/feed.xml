<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>邓小帅的Blog</title>
		<description>iOS Developer</description>
		<link>http://localhost:4000/</link>
		<atom:link href="http://localhost:4000//feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>File6</title>
				<description>&lt;p&gt;layout: post&lt;br /&gt;
title: 2017个人目标&lt;br /&gt;
date: 2016-12-01 16:25:06&lt;br /&gt;
tags: Skill&lt;br /&gt;
description: &lt;br /&gt;
share: true&lt;br /&gt;
—&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2017个人目标
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;========== 开发技能 ==========&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;React Native (JS)&lt;/li&gt;
  &lt;li&gt;VUE (JS)&lt;/li&gt;
  &lt;li&gt;Android (Java)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;========== 开发工具 ==========&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;VIM&lt;/li&gt;
  &lt;li&gt;Sublime Text&lt;/li&gt;
  &lt;li&gt;Android Studio&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;========== 个人目标 ==========&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;财务自由&lt;/li&gt;
  &lt;li&gt;Mac NoteBooks&lt;/li&gt;
  &lt;li&gt;为父母买保险&lt;/li&gt;
  &lt;li&gt;找一个女朋友&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Thu, 22 Dec 2016 00:00:00 +0800</pubDate>
				<link>http://localhost:4000//2016/12/file6</link>
				<guid isPermaLink="true">http://localhost:4000//2016/12/file6</guid>
			</item>
		
			<item>
				<title>2017个人目标</title>
				<description>&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2017个人目标

========== 开发技能 ==========

* React Native (JS)
* VUE (JS)
* Android (Java)

========== 开发工具 ==========

* VIM 
* Sublime Text
* Android Studio

========== 个人目标 ==========

* 财务自由
* Mac NoteBooks
* 为父母买保险
* 找一个女朋友
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
				<pubDate>Fri, 02 Dec 2016 00:25:06 +0800</pubDate>
				<link>http://localhost:4000//2016/12/file7</link>
				<guid isPermaLink="true">http://localhost:4000//2016/12/file7</guid>
			</item>
		
			<item>
				<title>自用代码块模板</title>
				<description>&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;整理常用的Swift代码模板, 个人自用
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;key highlighter-rouge&quot;&gt;ViewController代码模板&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//MARK: ================= 生命周期 =================&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;viewDidLoad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;viewDidLoad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;initData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;initUI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;viewWillAppear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;animated:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;viewWillAppear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;viewWillDisappear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;animated:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;viewWillDisappear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//MARK: ================= 代理方法 =================&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//MARK: ================= 事件处理 =================&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//MARK: ================= 网络数据处理 ==============&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//MARK: ================= 类和对象方法 ==============&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//MARK: 初始化数据&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//MARK: 初始化UI&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initUI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//MARK: ================= 访问器 ===================&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;key highlighter-rouge&quot;&gt;注释1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//--------------  &amp;lt;#这里插入注释#&amp;gt;  --------------//&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;key highlighter-rouge&quot;&gt;注释2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//MARK: &amp;lt;#注释#&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;key highlighter-rouge&quot;&gt;注释3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//MARK: ================= &amp;lt;#切割线#&amp;gt; ===================&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;key highlighter-rouge&quot;&gt;添加方法&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//MARK: &amp;lt;#方法名#&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
				<pubDate>Fri, 02 Dec 2016 00:25:06 +0800</pubDate>
				<link>http://localhost:4000//2016/12/file5</link>
				<guid isPermaLink="true">http://localhost:4000//2016/12/file5</guid>
			</item>
		
			<item>
				<title>2016年12月学习技能清单</title>
				<description>&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    * APP接入HTTPS并实现双向认证
    * 直播功能的实现
    * APP框架搭建(MVVM)
    * 基本掌握Swift
    * framework制作
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
				<pubDate>Fri, 02 Dec 2016 00:25:06 +0800</pubDate>
				<link>http://localhost:4000//2016/12/file4</link>
				<guid isPermaLink="true">http://localhost:4000//2016/12/file4</guid>
			</item>
		
			<item>
				<title>利用多线程GCD定时器的实现</title>
				<description>&lt;p&gt;Object-C 利用多线程GCD实现一个定时器&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    weakself.timeout = 60; //倒计时时间
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    dispatch_source_t _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0, queue);
    dispatch_source_set_timer(_timer,dispatch_walltime(NULL, 0), 1.0*NSEC_PER_SEC, 0); //每秒执行
    dispatch_source_set_event_handler(_timer, ^{
    if(weakself.timeout&amp;lt;=0){ //倒计时结束，关闭
        dispatch_source_cancel(_timer);
        dispatch_async(dispatch_get_main_queue(), ^{
            //设置界面的按钮显示 根据自己需求设置
            weakself.checkNumBtn.titleLabel.font = [UIFont systemFontOfSize:10];
            //                weakself.checkNumBtn.titleLabel.textColor = [UIColor blueColor];
            [weakself.checkNumBtn setTitleColor:[UIColor colorWithHexString:@&quot;#fb7e1a&quot;] forState:UIControlStateNormal];
            [weakself.checkNumBtn setTitle:@&quot;获取验证码&quot; forState:UIControlStateNormal];
            weakself.checkNumBtn.userInteractionEnabled = YES;
            weakself.userNameTextField.userInteractionEnabled = YES;
            weakself.loginMudeBtn.userInteractionEnabled = YES;
            weakself.registMudeBtn.userInteractionEnabled = YES;
        });
    }else{

        int seconds = weakself.timeout % 61;
        NSString *strTime = [NSString stringWithFormat:@&quot;%.2d&quot;, seconds];
        dispatch_async(dispatch_get_main_queue(), ^{

            //设置界面的按钮显示 根据自己需求设置
            [UIView beginAnimations:nil context:nil];
            [UIView setAnimationDuration:1];
            weakself.checkNumBtn.titleLabel.font = [UIFont systemFontOfSize:10];
            //                weakself.checkNumBtn.titleLabel.textColor = [UIColor grayColor];
            [weakself.checkNumBtn setTitleColor:[UIColor lightGrayColor] forState:UIControlStateNormal];
            [weakself.checkNumBtn setTitle:[NSString stringWithFormat:SENDCODE_SECONDS,strTime] forState:UIControlStateNormal];
            [UIView commitAnimations];
            weakself.checkNumBtn.userInteractionEnabled = NO;
            self.userNameTextField.userInteractionEnabled = NO; // 不让编辑手机 －－ 防止发送短信后更改手机号
            weakself.loginMudeBtn.userInteractionEnabled = NO;
            weakself.registMudeBtn.userInteractionEnabled = NO;
        });
        weakself.timeout--;
    }
});
dispatch_resume(_timer); // 将button类型改为custom避免按钮闪烁
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
				<pubDate>Fri, 02 Dec 2016 00:25:06 +0800</pubDate>
				<link>http://localhost:4000//2016/12/file1</link>
				<guid isPermaLink="true">http://localhost:4000//2016/12/file1</guid>
			</item>
		
			<item>
				<title>如何在Swift项目中使用OC类实现混编的解决方法</title>
				<description>&lt;p&gt;在已有的Swift工程中, 当你需要使用OC的类文件, 或者需要集成SDK时可能会遇到需要实现Swift和Object-C混编的方式, 可以通过以下步骤轻松实现项目中混编.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;创建你需要的OC的类文件, 创建结束后, 会提示生成一个桥接头文件, 点击蓝色Create按钮.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000//images/fulls/img1.png&quot; class=&quot;fit image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;这时项目中可以看到有新创建的OC文件和一个桥接文件. 桥接文件名格式默认为: 项目名-Bridging-Header.h&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000//images/fulls/img2.png&quot; class=&quot;fit image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;完成之后便可以在需要在调OC的地方使用.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000//images/fulls/img3.png&quot; class=&quot;fit image&quot; /&gt;&lt;/p&gt;

</description>
				<pubDate>Thu, 01 Dec 2016 00:00:00 +0800</pubDate>
				<link>http://localhost:4000//2016/12/file3</link>
				<guid isPermaLink="true">http://localhost:4000//2016/12/file3</guid>
			</item>
		
			<item>
				<title>自定义对象的归档和解归档</title>
				<description>&lt;p&gt;对对象进行归档，和对对象进行拷贝差不多路数，也就是需要协议，之前的时对NSString和NSNumber这些对象为什么没有归档协议？因为它们自带了。&lt;br /&gt;
所以如果我们要对自定义的对象（而不是Foundation里默认的对象）进行归档的话就需要引入归档协议&lt;NSCoding&gt;。&lt;/NSCoding&gt;&lt;/p&gt;

&lt;p&gt;举例：声明一个User类，然后创建一个对象user1，把这个user1进行归档，然后把归档后的文件解归档到user2中，看看是否是原先的那些数据。&lt;/p&gt;

&lt;p&gt;（1）User.h&lt;br /&gt;
        view plain copy 在CODE上查看代码片派生到我的代码片&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;
&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NSObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSCoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//对自定义对象的归档和解归档需引入协议，就像要拷贝对象，那么这个类要引入拷贝协议一样
&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;passwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;（2）User.m&lt;br /&gt;
        view plain copy 在CODE上查看代码片派生到我的代码片&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;cp&quot;&gt;#import &quot;User.h&quot;
&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//以下两个函数格式是系统默认，直接点击NSCoding查看并复制过来即可
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encodeWithCoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSCoder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;aCoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aCoder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encodeInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_age&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;age&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aCoder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encodeObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_name&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aCoder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encodeObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_email&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aCoder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encodeObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_passwd&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;passwd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;initWithCoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSCoder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;aDecoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aDecoder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decodeIntForKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;age&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aDecoder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decodeObjectForKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aDecoder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decodeObjectForKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;passwd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aDecoder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decodeObjectForKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;passwd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;（3）main.m&lt;br /&gt;
[objc] view plain copy 在CODE上查看代码片派生到我的代码片&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    #import &quot;User.h&quot;
    #import &amp;lt;Foundation/Foundation.h&amp;gt;

    int main(int argc, const charchar * argv[])
    {
        @autoreleasepool {
            //初始化一个对象病赋值
            User *user1=[[User alloc]init];
            user1.age=20;
            user1.name=@&quot;jack&quot;;
            user1.email=@&quot;123@163.com&quot;;
            user1.passwd=@&quot;123456&quot;;
            //创建文件路径
            NSString *filePath=[NSHomeDirectory() stringByAppendingPathComponent:@&quot;self.arc&quot;];
            //把这个对象归档
            BOOL success=[NSKeyedArchiver archiveRootObject:user1 toFile:filePath];
            if (success) {
                NSLog(@&quot;success&quot;);
            }

            //解归档
            User *user2=[NSKeyedUnarchiver unarchiveObjectWithFile:filePath];//解归档到另一个对象中
            NSLog(@&quot;%d,%@,%@,%@&quot;,user2.age,user2.name,user2.email,user2.passwd);//输出，完好
        }
        return 0;
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;归档结果，生成一个文件：&lt;/p&gt;

&lt;p&gt;解归档结果：&lt;br /&gt;
[objc] view plain copy 在CODE上查看代码片派生到我的代码片&lt;br /&gt;
20,jack,123@163.com,123456&lt;/p&gt;

&lt;p&gt;结合之前的一篇笔记，总结：&lt;br /&gt;
a：归档的时候，就是先有一个对象，然后有一个最终文件路径，然后利用[NSKeyedArchiver archiveRootObject:&amp;lt;#(id)#&amp;gt; toFile:&amp;lt;#(NSString *)#&amp;gt;]把对象归档到这个文件中；&lt;br /&gt;
b：解归档就是，这个归档的对象是什么类型的，你就用什么类型的对象去接这个解归档生成的东西，解归档之后就可以正常使用这个对象了；&lt;br /&gt;
c：归档其实有两种方式：上面总结是简单地就是直接把对象归档到一个文件里。还有一种复杂的就是上一个笔记用得例子，把数据对象data进行归 档»&amp;gt;用归档函数把数据写入到data中»&amp;gt;把data写入到最终文件中，解归档的路径是先把文件接成data 对象然后调用里面的数据，其实一般data是一个字典格式；&lt;br /&gt;
d：根据对象是自带的还是自定义的，归档也有些许区别：自定义对象要实现归档，那么它的类必须引入归档协议&lt;NSCoding&gt;；
e：归档后的数据内容都是加密的。&lt;/NSCoding&gt;&lt;/p&gt;
</description>
				<pubDate>Thu, 01 Dec 2016 00:00:00 +0800</pubDate>
				<link>http://localhost:4000//2016/12/file2</link>
				<guid isPermaLink="true">http://localhost:4000//2016/12/file2</guid>
			</item>
		
	</channel>
</rss>
